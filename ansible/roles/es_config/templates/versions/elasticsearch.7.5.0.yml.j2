# Version 7.2.0
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html


# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ es_cluster_name }}


# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ ansible_host }}
#
# Add custom attributes to the node:
#
node.attr.rack: r1

{% if node_data is defined %}
node.data: {{ node_data }}
{% endif %}
{% if node_master is defined %}
node.master: {{ node_master }}
{% endif %}

# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: /var/lib/elasticsearch
#
# Path to log files:
#
path.logs: /var/log/elasticsearch


# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#

# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
network.host: {{ ansible_currentHost_fact_ip }}
#
# Set a custom port for HTTP:
#
http.port: 9200
#
# For more information, consult the network module documentation.


# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
discovery.seed_hosts: [{% for host in groups[es_group] %}"{{ hostvars[host]['ansible_host']}}"{% if groups[es_group]|length > loop.index %},{%endif%}{% endfor %}]
discovery.zen.minimum_master_nodes: 1


# Bootstrap the cluster using an initial set of master-eligible nodes:
#
cluster.initial_master_nodes: [{% for host in groups[es_group] %}"{{ hostvars[host]['ansible_host']}}"{% if groups[es_group]|length > loop.index %},{%endif%}{% endfor %}]
#
#
# For more information, consult the discovery and cluster formation module documentation.
#

# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#

# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
action.destructive_requires_name: true

{% if "{{script_enable}}"=="true" %}
script.inline: true
script.auto_reload_enabled: true
script.groovy.sandbox.enabled: true
path.scripts: {{ es_config_scripts_path }}
resource.reload.interval : {{ es_config_reload_scripts_interval }}
{%endif%}
