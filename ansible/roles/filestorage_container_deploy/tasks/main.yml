---
- name: Create docker service folder
  file:
    path: "/etc/systemd/system/docker.service.d/"
    state: directory
    mode: "0644"
    owner: root
    group: root
    recurse: yes

- name: Create docker service additional config file
  template:
    src: "docker_service.override.conf.j2"
    dest: "/etc/systemd/system/docker.service.d/override.conf"
    owner: root
    group: root
    mode: "0644"
    backup: yes
    force: yes
  with_together:
    - "{{ linux_filesystem_map }}"

- name: systemd_reload
  shell: systemctl daemon-reload

- name: Ensure docker service restarted
  service:
    name: docker
    state: restarted

- pip:
    name: docker,docker-compose
  vars:
    - ansible_python_interpreter: "/usr/bin/python3"
    - ansible_pip_interpreter: "/usr/bin/pip3"

- name: Login into private registry and force re-authorization
  docker_login:
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ vault_docker_registry_token }}"
    reauthorize: yes
  vars:
    - ansible_python_interpreter: "/usr/bin/python3"
    - ansible_pip_interpreter: "/usr/bin/pip3"

- name: Clean Application working Directory
  file:
    path: "/tmp/app"
    state: absent

- name: Create Application working Directory
  file:
    path: "/tmp/app"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Copy docker-compose.yaml file
  template:
    src: "docker-compose.yaml.j2"
    dest: "/tmp/app/docker-compose.yaml"

- name: Copy .env file
  template:
    src: ".env.j2"
    dest: "/tmp/app/.env"


- name: "Docker-Compose':' Run File Storage Container ( Require - docker-compose pip package )"
  docker_compose:
    project_src: "/tmp/app"
    state: present
    pull: yes
  vars:
    - ansible_python_interpreter: "/usr/bin/python3"
    - ansible_pip_interpreter: "/usr/bin/pip3"


- name: "Remove unused images"
  shell: "docker image prune -af"