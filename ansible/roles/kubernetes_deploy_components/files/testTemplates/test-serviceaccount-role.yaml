apiVersion: v1
kind: Namespace
metadata:
  name: nginx-namespace-test
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-service-account
  namespace: nginx-namespace-test
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nginx-role
  namespace: nginx-namespace-test
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nginx-role-binding
  namespace: nginx-namespace-test
subjects:
  - kind: ServiceAccount
    name: nginx-service-account
    namespace: nginx-namespace-test
roleRef:
  kind: Role
  name: nginx-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx
  namespace: nginx-namespace-test
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccount: nginx-service-account
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80


###################
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-admin-account
  namespace: nginx-namespace-test
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: nginx-namespace-test
  name: deployment-manager
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["deployments", "replicasets", "pods", "pods/log"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"] # You can also use ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deployment-manager-binding
  namespace: nginx-namespace-test
#subjects:
#- kind: User
#  name: joedev
#  apiGroup: "rbac.authorization.k8s.io"
subjects:
  - kind: ServiceAccount
    name: nginx-admin-account
    namespace: nginx-namespace-test
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io
#roleRef:
#  kind: Role
#  name: deployment-manager
#  apiGroup: "rbac.authorization.k8s.io"