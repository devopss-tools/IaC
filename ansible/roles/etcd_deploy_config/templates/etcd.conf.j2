# This is the configuration file for the etcd server.

# Human-readable name for this member.
name: '{{ ansible_hostname }}'

# Path to the data directory.
#data-dir: '{{ etcd_config_datadir }}'

# Path to the dedicated wal directory.
#wal-dir: '{{ etcd_config_waldir }}'

# Number of committed transactions to trigger a snapshot to disk.
snapshot-count: 10000

# Time (in milliseconds) of a heartbeat interval.
heartbeat-interval: 100

# Time (in milliseconds) for an election to timeout.
election-timeout: 1000

# Raise alarms when backend size exceeds the given quota. 0 means use the
# default quota.
quota-backend-bytes: 0

# List of comma separated URLs to listen on for peer traffic.
listen-peer-urls: http://{{ ansible_currentHost_fact_ip }}:2380

# List of comma separated URLs to listen on for client traffic.
listen-client-urls: http://{{ ansible_currentHost_fact_ip }}:2379,http://127.0.0.1:2379

# Maximum number of snapshot files to retain (0 is unlimited).
max-snapshots: 5

# Maximum number of wal files to retain (0 is unlimited).
max-wals: 5

# Comma-separated white list of origins for CORS (cross-origin resource sharing).
cors:

# List of this member's peer URLs to advertise to the rest of the cluster.
# The URLs needed to be a comma-separated list.

initial-advertise-peer-urls: http://{{  ansible_currentHost_fact_hostname }}:2380
#initial-advertise-peer-urls: {% for host in groups['etcd-group'] %}http://{{  hostvars[host].ansible_host }}:2380{% if not loop.last %},{% endif %}{% endfor %}


# List of this member's client URLs to advertise to the public.
# The URLs needed to be a comma-separated list.
advertise-client-urls: http://{{  ansible_currentHost_fact_ip }}:2379

# Discovery URL used to bootstrap the cluster.
discovery:

# Valid values include 'exit', 'proxy'
discovery-fallback: 'proxy'

# HTTP proxy to use for traffic to discovery service.
discovery-proxy:

# DNS domain used to bootstrap initial cluster.
discovery-srv:

# Initial cluster configuration for bootstrapping.
initial-cluster: {% for host in groups['etcd-group'] %}{{ host.split('.', 1)[0] }}=http://{{ hostvars[host].ansible_host }}:2380{% if not loop.last %},{% endif %}{% endfor %}

# Initial cluster token for the etcd cluster during bootstrap.
initial-cluster-token: '{{ etcd_config_cluster_token }}'

# Initial cluster state ('new' or 'existing').
initial-cluster-state: 'new'

# Reject reconfiguration requests that would cause quorum loss.
strict-reconfig-check: false

# Accept etcd V2 client requests
enable-v2: true

# Enable runtime profiling data via HTTP server
enable-pprof: true

# Valid values include 'on', 'readonly', 'off'
proxy: 'off'

# Time (in milliseconds) an endpoint will be held in a failed state.
proxy-failure-wait: 5000

# Time (in milliseconds) of the endpoints refresh interval.
proxy-refresh-interval: 30000

# Time (in milliseconds) for a dial to timeout.
proxy-dial-timeout: 1000

# Time (in milliseconds) for a write to timeout.
proxy-write-timeout: 5000

# Time (in milliseconds) for a read to timeout.
proxy-read-timeout: 0

# Enable debug-level logging for etcd.
debug: false

# Specify a particular log level for each etcd package (eg: 'etcdmain=CRITICAL,etcdserver=DEBUG').
log-package-levels:

# Force to create a new one member cluster.
force-new-cluster: false
