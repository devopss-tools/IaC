---
# Determine if Java is installed and which is the current version
# current_java_version_result.rc != 0 : not installed
- name: determine which is current Java version
  shell: java -version
  register: current_java_version_result
  changed_when: current_java_version_result.rc != 0
  failed_when: no

# Set facts
- name: set fact is_java_intalled
  set_fact:
    is_java_installed: "{{ not current_java_version_result.changed }}"

- name: set fact exist_new_java_version
  set_fact:
    exist_new_java_version: "{{ not is_java_installed }}"


- name: set fact java_current_version
  set_fact:
    java_current_version: "{{ current_java_version_result.stderr.split('\n')[0]|regex_replace('.*\"(.*)\"','\\1') }}"
  when: is_java_installed
  changed_when: False

- name: overwrite fact exist_new_java_version
  set_fact:
    exist_new_java_version: "{{ java_current_version != new_java_version }}"
  when: is_java_installed
  changed_when: False

# Download Java 8 jdk
- name: Download Java 8 jdk
  get_url:
    url: "{{ jdk_url }}"
    dest: "/tmp/{{jdk_filename}}"
    #headers: "Cookie: oraclelicense=accept-securebackup-cookie"
    validate_certs: yes
  register: result
  when: (not is_java_installed or exist_new_java_version)

#- name: Download Java 8 jdk
#  copy:
#    src: "{{ jdk_url }}"
#    dest: "/tmp/{{jdk_filename}}"
#  when: (not is_java_installed or exist_new_java_version)

# Remove current java version
- name: Remove current java version
  yum: 
    name: jdk1.*
    state: absent
  when: ( is_java_installed and exist_new_java_version)

# Install Java 8
- name: Install Java 8
  yum: 
    name: "/tmp/{{jdk_filename}}"
    state: present
  when: (not is_java_installed or exist_new_java_version)

- name: Set java version as default
  alternatives:
    name: java
    link: /usr/bin/java
    #link: /bin/java
    path: "{{java_home}}/bin/java"
  when: (not is_java_installed or exist_new_java_version)

- name: Set JAVA_HOME
  lineinfile: 
    dest: /etc/environment 
    state: present
    regexp: '^JAVA_HOME'
    line: "JAVA_HOME={{ java_home }}"
  when: (not is_java_installed or exist_new_java_version) 

# Remove temporary downloaded jdk package
- name: remove temporary downloaded jdk package
  file: 
    path: "/tmp/{{jdk_filename}}"
    state: absent
  when: (not is_java_installed or exist_new_java_version) 
    